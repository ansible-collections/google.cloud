---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: Create a instance group
  google.cloud.gcp_compute_instance_group:
    name: instancegroup-backendservice
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: present
  register: instancegroup
- name: Create a HTTP health check
  google.cloud.gcp_compute_http_health_check:
    name: httphealthcheck-backendservice
    healthy_threshold: 10
    port: 8080
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: present
  register: healthcheck
- name: Delete a backend service
  google.cloud.gcp_compute_backend_service:
    name: "{{ resource_name }}"
    backends:
      - group: "{{ instancegroup.selfLink }}"
    health_checks:
      - "{{ healthcheck.selfLink }}"
    enable_cdn: "true"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: absent
# ----------------------------------------------------------
- name: Create a backend service
  google.cloud.gcp_compute_backend_service:
    name: "{{ resource_name }}"
    backends:
      - group: "{{ instancegroup.selfLink }}"
    health_checks:
      - "{{ healthcheck.selfLink }}"
    enable_cdn: "true"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: present
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
- name: Verify that backend_service was created
  google.cloud.gcp_compute_backend_service_info:
    filters:
      - name = {{ resource_name }}
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    scopes:
      - https://www.googleapis.com/auth/compute
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - results['resources'] | length == 1
# ----------------------------------------------------------------------------
- name: Create a backend service that already exists
  google.cloud.gcp_compute_backend_service:
    name: "{{ resource_name }}"
    backends:
      - group: "{{ instancegroup.selfLink }}"
    health_checks:
      - "{{ healthcheck.selfLink }}"
    enable_cdn: "true"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: present
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
# ----------------------------------------------------------
- name: Delete a backend service
  google.cloud.gcp_compute_backend_service:
    name: "{{ resource_name }}"
    backends:
      - group: "{{ instancegroup.selfLink }}"
    health_checks:
      - "{{ healthcheck.selfLink }}"
    enable_cdn: "true"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: absent
  register: result
- name: Assert changed is true
  ansible.builtin.assert:
    that:
      - result.changed == true
- name: Verify that backend_service was deleted
  google.cloud.gcp_compute_backend_service_info:
    filters:
      - name = {{ resource_name }}
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    scopes:
      - https://www.googleapis.com/auth/compute
  register: results
- name: Verify that command succeeded
  ansible.builtin.assert:
    that:
      - results['resources'] | length == 0
# ----------------------------------------------------------------------------
- name: Delete a backend service that does not exist
  google.cloud.gcp_compute_backend_service:
    name: "{{ resource_name }}"
    backends:
      - group: "{{ instancegroup.selfLink }}"
    health_checks:
      - "{{ healthcheck.selfLink }}"
    enable_cdn: "true"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: absent
  register: result
- name: Assert changed is false
  ansible.builtin.assert:
    that:
      - result.changed == false
# ---------------------------------------------------------
# Post-test teardown
# If errors happen, don't crash the playbook!
- name: Delete a HTTP health check
  google.cloud.gcp_compute_http_health_check:
    name: httphealthcheck-backendservice
    healthy_threshold: 10
    port: 8080
    timeout_sec: 2
    unhealthy_threshold: 5
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: absent
  register: healthcheck
  ignore_errors: true
- name: Delete a instance group
  google.cloud.gcp_compute_instance_group:
    name: instancegroup-backendservice
    zone: us-central1-a
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file | default(omit) }}"
    state: absent
  register: instancegroup
  ignore_errors: true
